class MooreMachine:
    def __init__(self):
        self.states = ['Q0', 'Q1', 'Q2', 'Q3']
        
        self.current_state = 'Q0'
        
        self.state_output = {
            'Q0': 0,
            'Q1': 0,
            'Q2': 0,
            'Q3': 1
        }
        
        
        self.transitions = {
            'Q0': {'0': 'Q0', '1': 'Q1'},
            'Q1': {'0': 'Q0', '1': 'Q2'},
            'Q2': {'0': 'Q0', '1': 'Q3'},
            'Q3': {'0': 'Q0', '1': 'Q3'}
        }

    def transition(self, input_bit):
        self.current_state = self.transitions[self.current_state][input_bit]
        return self.state_output[self.current_state]

    def process_input(self, input_string):
        output_sequence = []
        for bit in input_string:
            output = self.transition(bit)
            output_sequence.append(output)
        return output_sequence

if __name__ == "__main__":
    moore_machine = MooreMachine()
    
    input_string = input("Enter a binary input sequence (only 0s and 1s): ")
    
    while not all(bit in '01' for bit in input_string):
        print("Invalid input! Please enter only a sequence of 0s and 1s.")
        input_string = input("Enter a binary input sequence (only 0s and 1s): ")
    
    print("Input sequence:", input_string)
    
    output = moore_machine.process_input(input_string)
    print("Output sequence:", output)
